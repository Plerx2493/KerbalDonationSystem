@page "/Account/Manage/DeletePersonalData"

@using Microsoft.AspNetCore.Identity
@using KDS.Data
@using KDS.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Logging

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<DeletePersonalData> Logger
@inject DonationService DonationService

@attribute [Authorize]

<PageTitle>Delete Personal Data</PageTitle>

<StatusMessage Message="@message"/>

<h3>Delete Personal Data</h3>

<div class="alert alert-warning" role="alert">
    <p>
        <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
        <strong>This includes all data about donations you did and if your configured this service as a streamer it also includes all configs for your channel</strong>
    </p>
</div>

<div>
        <button class="w-100 btn btn-lg btn-danger" onclick="@OnValidSubmitAsync()">Delete data and close my account</button>
</div>

@code {
    private string? message;
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    }

    private async Task OnValidSubmitAsync()
    {
        var result = await UserManager.DeleteAsync(user);
        if (!result.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred deleting user.");
        }
        
        await DonationService.RemoveAllDonationsFromUserAsync(user.TwitchId);
        await DonationService.RemoveAllDonationsFromChannelAsync(user.TwitchId);

        await SignInManager.SignOutAsync();

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' deleted themselves", userId);

        RedirectManager.RedirectTo("");
    }
}